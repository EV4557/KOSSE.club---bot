import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, MessageHandler,
    ContextTypes, filters, ConversationHandler
)
print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –∫–æ–¥ Kosse Bot!")

CHOOSE_ACTION, CHOOSE_EVENT, ASK_QUESTION, DETAIL_QUESTION = range(4)

# --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö ---
event_details = {
    "–•–æ—Ä–æ–≤–æ–¥ –°–≤–µ—Ç–∞": {
        "—Å—Å—ã–ª–∫–∞": "https://kaliningrad.qtickets.events/183804-khorovod-sveta",
        "—Ü–µ–Ω–∞": "üéüÔ∏è –î–µ—Ç–∏ —Å 4-12 ‚Äî 700‚ÇΩ\nüíé –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π ‚Äî 1000‚ÇΩ\nüé© –í—Å–µ –≤–∫–ª—é—á–µ–Ω–æ ‚Äî 1400‚ÇΩ",
        "–≤—Ä–µ–º—è": "üïñ 13 —Å–µ–Ω—Ç—è–±—Ä—è\n–ù–∞—á–∞–ª–æ –≤ 13:00, –æ–∫–æ–Ω—á–∞–Ω–∏–µ –≤ 22:00",
        "–º–µ—Å—Ç–æ": "üìç –ö–µ–º–ø–∏–Ω–≥ Kosse.club, —É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, 10, –Ø–Ω—Ç–∞—Ä–Ω—ã–π."
    }
}

organizer_contact = "@kosse_club"

ABOUT_TEXT = (
    "Kosse.club ‚Äî —ç—Ç–æ —Ç—É—Ä–±–∞–∑–∞ ¬´–ö–µ–º–ø–∏–Ω–≥ –∑–æ–Ω–∞¬ª, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π —Å–µ–º–µ–π–Ω–æ–≥–æ –∏ –±–∏–∑–Ω–µ—Å-—Ñ–æ—Ä–º–∞—Ç–∞.\n\n"
    "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:\n"
    "‚Ä¢ üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ ‚Äî —Å–≤–∞–¥—å–±—ã, –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è, –∞—Ä–µ–Ω–¥–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–∏—á–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.\n"
    "‚Ä¢ üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã ‚Äî –º–∞–π—Å—ã, –∏–≤–µ–Ω—Ç—ã, —Ç–∏–º–±–∏–ª–¥–∏–Ω–≥–∏, —Ä–µ—Ç—Ä–∏—Ç—ã.\n"
    "‚Ä¢ üéØ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö ‚Äî –ø–µ–π–Ω—Ç–±–æ–ª, –∫–æ–º–∞–Ω–¥–Ω—ã–µ –∏–≥—Ä—ã (¬´–ö—Ä–æ–∫–æ–¥–∏–ª¬ª, ¬´–ë–∏—Ç–≤–∞ –ì–µ—Ä–æ–µ–≤¬ª).\n"
    "‚Ä¢ üç∑ –ì–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã ‚Äî –¥–µ–≥—É—Å—Ç–∞—Ü–∏–∏ –≤–∏–Ω –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤.\n"
    "‚Ä¢ üé® –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã ‚Äî –ª–µ–ø–∫–∞, –∫–µ—Ä–∞–º–∏–∫–∞, —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤—ã—Ö –∏–≥—Ä—É—à–µ–∫ –∏ –∏–∑–¥–µ–ª–∏–π.\n\n"
    "–£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤—Å—ë –¥–ª—è —è—Ä–∫–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –∏ —Å–ø–ª–æ—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã ‚Äî –æ—Ç –¥—É—à–µ–≤–Ω—ã—Ö —Å–µ–º–µ–π–Ω—ã—Ö —Ç–æ—Ä–∂–µ—Å—Ç–≤ –¥–æ –º–∞—Å—à—Ç–∞–±–Ω—ã—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π."
)

ABOUT_PHOTO = "https://raw.githubusercontent.com/EV4557/KOSSE.club---bot/main/logoKosse.png"

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup([
    ["–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç", "–ö–æ–Ω—Ç–∞–∫—Ç—ã"],
    ["–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–ù–µ–º–Ω–æ–≥–æ –æ –Ω–∞—Å"],
    ["–î—Ä–µ—Å—Å-–∫–æ–¥ –∏ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è", "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]
], resize_keyboard=True)

# --- –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ---
PRICE_KEYWORDS = [
    "—Ü–µ–Ω–∞", "—Ü–µ–Ω", "—Å—Ç–æ–∏–º–æ—Å—Ç—å", "—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç", "–±–∏–ª–µ—Ç", "–ø—Ä–∞–π—Å", "–æ–ø–ª–∞—Ç–∞", "–¥–µ–Ω–µ–≥", "—Ä—É–±", "‚ÇΩ"
]
TIME_KEYWORDS = [
    "–≤—Ä–µ–º—è", "–≤—Ä–µ–º–µ–Ω", "–∫–æ–≥–¥–∞", "–≤–æ —Å–∫–æ–ª—å–∫–æ", "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "–¥–∞—Ç–∞", "—á–∏—Å–ª–æ", "—Å—Ä–æ–∫–∏", "–¥–µ–Ω—å", "–Ω–∞—á–∞–ª–æ", "–æ–∫–æ–Ω—á–∞–Ω–∏–µ"
]
PLACE_KEYWORDS = [
    "–º–µ—Å—Ç–æ", "–º–µ—Å—Ç", "–≥–¥–µ", "–∞–¥—Ä–µ—Å", "–ª–æ–∫–∞—Ü–∏—è", "—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è", "–ø–ª–æ—â–∞–¥–∫–∞", "–∫–µ–º–ø–∏–Ω–≥", "kosse", "kosse.club", "–∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è"
]
RETURN_KEYWORDS = [
    "–≤–æ–∑–≤—Ä–∞—Ç", "–≤–µ—Ä–Ω—É—Ç—å", "–æ–±–º–µ–Ω", "refund", "–æ—Ç–º–µ–Ω–∞", "–æ—Ç–º–µ–Ω–∏—Ç—å", "—Å–¥–∞—Ç—å –±–∏–ª–µ—Ç", "–≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏"
]
CONTACT_KEYWORDS = [
    "–∫–æ–Ω—Ç–∞–∫—Ç", "—Å–≤—è–∑—å", "—Ç–µ–ª–µ—Ñ–æ–Ω", "–ø–æ—á—Ç–∞", "email", "–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä", "–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–∞–¥–º–∏–Ω"
]
ABOUT_KEYWORDS = [
    "–æ –≤–∞—Å", "–æ –∫–ª—É–±–µ", "–æ –Ω–∞—Å", "–∏–Ω—Ñ–æ", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "—á—Ç–æ —Ç–∞–∫–æ–µ kosse", "–Ω–µ–º–Ω–æ–≥–æ –æ –≤–∞—Å", "—á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å"
]

# --- Handlers ---

# –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Kosse.club üéüÔ∏è\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=main_menu
    )
    return CHOOSE_ACTION

async def handle_event_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "‚¨Ö –ù–∞–∑–∞–¥":
        await update.message.reply_text("–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)
        return CHOOSE_ACTION

    if text in event_details:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
        context.user_data["selected_event"] = text

        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å, –∫–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∫–∞–∑–∞—Ç—å
        keyboard = [["–¶–µ–Ω–∞", "–í—Ä–µ–º—è", "–ú–µ—Å—Ç–æ", "–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç"], ["‚¨Ö –ù–∞–∑–∞–¥"]]
        await update.message.reply_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: *{text}*\n–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?",
            parse_mode="Markdown",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        return DETAIL_QUESTION

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª —á—Ç–æ-—Ç–æ, —á–µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ ‚Äî —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    keyboard = [[name] for name in event_details]
    keyboard.append(["‚¨Ö –ù–∞–∑–∞–¥"])
    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥.",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    return CHOOSE_EVENT

# –£—Ç–æ—á–Ω–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
async def handle_detail_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "‚¨Ö –ù–∞–∑–∞–¥":
        keyboard = [
            ["–¶–µ–Ω–∞", "–í—Ä–µ–º—è", "–ú–µ—Å—Ç–æ", "–û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –±–∏–ª–µ—Ç–∞"],
            ["‚¨Ö –ù–∞–∑–∞–¥"]
        ]
        await update.message.reply_text(
            "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n"
            "‚Ä¢ –¶–µ–Ω–∞ ‚Äî —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∏–ª–µ—Ç–æ–≤\n"
            "‚Ä¢ –í—Ä–µ–º—è ‚Äî –∫–æ–≥–¥–∞ –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü\n"
            "‚Ä¢ –ú–µ—Å—Ç–æ ‚Äî –≥–¥–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ\n"
            "‚Ä¢ –û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –±–∏–ª–µ—Ç–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        return ASK_QUESTION

    question_type = context.user_data.get("question_type")

    if text not in event_details or not question_type or question_type not in event_details[text]:
        await update.message.reply_text("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=main_menu)
        return CHOOSE_ACTION

    answer = event_details[text][question_type]
    await update.message.reply_text(answer, reply_markup=main_menu)
    return CHOOSE_ACTION

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
async def handle_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "‚¨Ö –ù–∞–∑–∞–¥":
        await update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)
        return CHOOSE_ACTION

    question = text.lower()

    if any(word in question for word in RETURN_KEYWORDS):
        await update.message.reply_text(
            f"üßæ –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –±–∏–ª–µ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ {organizer_contact} –∏ —É–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n\n"
            "1Ô∏è‚É£ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞\n"
            "2Ô∏è‚É£ –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n"
            "3Ô∏è‚É£ –ö–∞–∫–∏–µ –±–∏–ª–µ—Ç—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å\n"
            "4Ô∏è‚É£ –ü–æ—á—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—ã–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω –∑–∞–∫–∞–∑\n"
            "5Ô∏è‚É£ –°–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã\n"
            "6Ô∏è‚É£ –ü—Ä–∏—á–∏–Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞\n\n"
            "üìå –£—Å–ª–æ–≤–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞:\n"
            "‚Ä¢ –ë–æ–ª–µ–µ 5 –¥–Ω–µ–π ‚Äî —É–¥–µ—Ä–∂–∞–Ω–∏–µ 0%\n"
            "‚Ä¢ –û—Ç 4 –¥–æ 5 –¥–Ω–µ–π ‚Äî —É–¥–µ—Ä–∂–∞–Ω–∏–µ 50%\n"
            "‚Ä¢ –û—Ç 3 –¥–æ 4 –¥–Ω–µ–π ‚Äî —É–¥–µ—Ä–∂–∞–Ω–∏–µ 70%\n"
            "‚Ä¢ –ú–µ–Ω–µ–µ 3 –¥–Ω–µ–π ‚Äî –≤–æ–∑–≤—Ä–∞—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω",
            reply_markup=main_menu
        )
        return CHOOSE_ACTION
    elif any(word in question for word in PRICE_KEYWORDS):
        context.user_data["question_type"] = "—Ü–µ–Ω–∞"
    elif any(word in question for word in TIME_KEYWORDS):
        context.user_data["question_type"] = "–≤—Ä–µ–º—è"
    elif any(word in question for word in PLACE_KEYWORDS):
        context.user_data["question_type"] = "–º–µ—Å—Ç–æ"
    elif any(word in question for word in CONTACT_KEYWORDS):
        await update.message.reply_text(f"üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º:\n{organizer_contact}", reply_markup=main_menu)
        return CHOOSE_ACTION
    elif any(word in question for word in ABOUT_KEYWORDS):
        await update.message.reply_photo(photo=ABOUT_PHOTO, caption="–ü—Ä–æ–µ–∫—Ç Kosse.club üëá", reply_markup=main_menu)
        await update.message.reply_text(ABOUT_TEXT, reply_markup=main_menu)
        return CHOOSE_ACTION
    else:
        context.user_data["fail_count"] = context.user_data.get("fail_count", 0) + 1
        if context.user_data["fail_count"] >= 2:
            await update.message.reply_text(
                f"–ü–æ—Ö–æ–∂–µ, —è –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å üòî\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º: {organizer_contact}",
                reply_markup=main_menu
            )
            return CHOOSE_ACTION
        else:
            await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–æ–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å.")
            return ASK_QUESTION

    keyboard = [[name] for name in event_details]
    keyboard.append(["‚¨Ö –ù–∞–∑–∞–¥"])
    await update.message.reply_text(
        "–û –∫–∞–∫–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –∏–¥—ë—Ç —Ä–µ—á—å?",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    return DETAIL_QUESTION

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def handle_action(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    question_text = text.lower()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    if any(word in question_text for word in PRICE_KEYWORDS + TIME_KEYWORDS + PLACE_KEYWORDS + RETURN_KEYWORDS + CONTACT_KEYWORDS + ABOUT_KEYWORDS):
        return await handle_question(update, context)

    if text == "–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç":
        keyboard = [[name] for name in event_details]
        keyboard.append(["‚¨Ö –ù–∞–∑–∞–¥"])
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ:", reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True))
        return CHOOSE_EVENT

    elif text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text(f"üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º:\n{organizer_contact}", reply_markup=main_menu)
        return CHOOSE_ACTION

    elif text == "–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è":
        info = "\n".join(
            f"üéâ {name}\n{event_details[name]['–≤—Ä–µ–º—è']}\n{event_details[name]['–º–µ—Å—Ç–æ']}\n"
            f"–ë–∏–ª–µ—Ç—ã: {event_details[name]['—Å—Å—ã–ª–∫–∞']}\n"
            for name in event_details
        )
        await update.message.reply_text(f"üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:\n\n{info}", reply_markup=main_menu)
        return CHOOSE_ACTION

    elif text == "–ù–µ–º–Ω–æ–≥–æ –æ –Ω–∞—Å":
        await update.message.reply_photo(photo=ABOUT_PHOTO, caption="–ü—Ä–æ–µ–∫—Ç Kosse.club üëá", reply_markup=main_menu)
        await update.message.reply_text(ABOUT_TEXT, reply_markup=main_menu)
        return CHOOSE_ACTION

    elif text == "–î—Ä–µ—Å—Å-–∫–æ–¥ –∏ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è":
        rules = (
            "üéüÔ∏è *–ü—Ä–∞–≤–∏–ª–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è –∏ –¥—Ä–µ—Å—Å-–∫–æ–¥:*\n\n"
            "1Ô∏è‚É£ –í—Ö–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –±–∏–ª–µ—Ç–∞.\n"
            "2Ô∏è‚É£ –ö–∞–∂–¥—ã–π –≥–æ—Å—Ç—å –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø—Ä–∏ —Å–µ–±–µ –¥–æ–∫—É–º–µ–Ω—Ç, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–π –ª–∏—á–Ω–æ—Å—Ç—å.\n"
            "3Ô∏è‚É£ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã –æ—Å—Ç–∞–≤–ª—è—é—Ç –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ –æ—Ç–∫–∞–∑–∞—Ç—å –≤–æ –≤—Ö–æ–¥–µ –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω –∏ –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤.\n"
            "4Ô∏è‚É£ –ù–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è –ª–∏—Ü–∞ –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π, –≥—Ä—è–∑–Ω–æ–π –∏–ª–∏ –Ω–µ–ø–æ–¥–æ–±–∞—é—â–µ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ –æ–¥–µ–∂–¥–µ.\n"
            "5Ô∏è‚É£ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å –ª–∏—á–Ω—ã—Ö –≤–µ—â–µ–π –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —Ç—É—Ä–±–∞–∑—ã –Ω–µ—Å—É—Ç –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏.\n"
            "6Ô∏è‚É£ –ó–∞–ø—Ä–µ—â–µ–Ω—ã: –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –Ω–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞, –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏ –∏ –æ—Ä—É–∂–∏–µ.\n"
            "7Ô∏è‚É£ –ù–∞—Ä—É—à–∏—Ç–µ–ª–∏ –ø—Ä–∞–≤–∏–ª –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã –±–µ–∑ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –±–∏–ª–µ—Ç–∞.\n\n"
            "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —É–≤–∞–∂–µ–Ω–∏–µ –∫ –ø—Ä–∞–≤–∏–ª–∞–º!"
        )
        await update.message.reply_text(rules, parse_mode="Markdown", reply_markup=main_menu)
        return CHOOSE_ACTION

    elif text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        keyboard = [
            ["–¶–µ–Ω–∞", "–í—Ä–µ–º—è", "–ú–µ—Å—Ç–æ", "–í–æ–∑–≤—Ä–∞—Ç –±–∏–ª–µ—Ç–∞"],
            ["‚¨Ö –ù–∞–∑–∞–¥"]
        ]
        await update.message.reply_text(
            "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n"
            "‚Ä¢ –¶–µ–Ω–∞ ‚Äî —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∏–ª–µ—Ç–æ–≤\n"
            "‚Ä¢ –í—Ä–µ–º—è ‚Äî –∫–æ–≥–¥–∞ –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü\n"
            "‚Ä¢ –ú–µ—Å—Ç–æ ‚Äî –≥–¥–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ\n"
            "‚Ä¢ –í–æ–∑–≤—Ä–∞—Ç –±–∏–ª–µ—Ç–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        context.user_data["fail_count"] = 0
        return ASK_QUESTION

    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é.", reply_markup=main_menu)
        return CHOOSE_ACTION

# –û—Ç–º–µ–Ω–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)
    return CHOOSE_ACTION

# –ó–∞–ø—É—Å–∫
def main():
    app = Application.builder().token("8244050011:AAGP565NclU046a-WsP-nO8hNOcvkwQCh0U").build()

    conv = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            CHOOSE_ACTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_action)],
            CHOOSE_EVENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_event_choice)],
            ASK_QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_question)],
            DETAIL_QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_detail_question)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv)
    app.run_polling()


if __name__ == "__main__":
    main()