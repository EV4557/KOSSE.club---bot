from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ContextTypes, filters, ConversationHandler
)

CHOOSE_ACTION, CHOOSE_EVENT, ASK_QUESTION, DETAIL_QUESTION = range(4)

event_details = {
    "–ù–ï–ë–û–°–í–û–î": {
        "—Å—Å—ã–ª–∫–∞": "https://qtickets.ru/event/177134",
        "—Ü–µ–Ω–∞": "üéüÔ∏è White DC ‚Äî 1000‚ÇΩ\nüíé VIP ‚Äî 1500‚ÇΩ\nüé© –ö–ª–∞—Å—Å–∏–∫–∞ –±–µ–∑ DC ‚Äî 2000‚ÇΩ",
        "–≤—Ä–µ–º—è": "üïñ 2 –∞–≤–≥—É—Å—Ç–∞\n–ù–∞—á–∞–ª–æ –≤ 19:00, –æ–∫–æ–Ω—á–∞–Ω–∏–µ –≤ 05:00",
        "–º–µ—Å—Ç–æ": "üìç –ü—Ä–∞–≤–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è, 9, ¬´–ë—Ä–∞–≤–æ –ò—Ç–∞–ª–∏—è¬ª"
    },
    "AYAWASKA PARTY": {
        "—Å—Å—ã–ª–∫–∞": "https://qtickets.ru/event/179188",
        "—Ü–µ–Ω–∞": "üéüÔ∏è –õ–µ—Ç–Ω–∏–π —Å—Ç–∏–ª—å, —è—Ä–∫–∏–π –ª—É–∫, –∫—É–ø–∞–ª—å–Ω–∏–∫–∏ ‚Äî 1000‚ÇΩ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ\nüé© –ö–ª–∞—Å—Å–∏–∫–∞ ‚Äî 1500‚ÇΩ",
        "–≤—Ä–µ–º—è": "üïñ 16 –∞–≤–≥—É—Å—Ç–∞\n–ù–∞—á–∞–ª–æ –≤ 19:00, –æ–∫–æ–Ω—á–∞–Ω–∏–µ –≤ 05:00",
        "–º–µ—Å—Ç–æ": "üìç –ö–ª—É–± ‚ÄúW DoubleU‚Äù, –ø—Ä–æ—Å–ø–µ–∫—Ç –ú–∏—Ä–∞ 31"
    }
}

organizer_contact = "@elenaelectrodvor"

main_menu = ReplyKeyboardMarkup([
    ["–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç", "–ö–æ–Ω—Ç–∞–∫—Ç—ã"],
    ["–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–ù–µ–º–Ω–æ–≥–æ –æ –Ω–∞—Å"],
    ["–î—Ä–µ—Å—Å-–∫–æ–¥ –∏ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è", "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]
], resize_keyboard=True)

# –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Electrodvor üéüÔ∏è\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=main_menu
    )
    return CHOOSE_ACTION

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def handle_action(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç":
        keyboard = [[name] for name in event_details]
        keyboard.append(["‚¨Ö –ù–∞–∑–∞–¥"])
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        return CHOOSE_EVENT

    elif text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text(
            f"üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º:\n{organizer_contact}",
            reply_markup=main_menu
        )
        return CHOOSE_ACTION

        elif text == "–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è":
        for name, details in event_details.items():
            caption = (
                f"üéâ *{name}*\n"
                f"{details['–≤—Ä–µ–º—è']}\n"
                f"{details['–º–µ—Å—Ç–æ']}\n\n"
                f"{details['—Ü–µ–Ω–∞']}\n\n"
                f"[–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç]({details['—Å—Å—ã–ª–∫–∞']})"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
            if name == "–ù–ï–ë–û–°–í–û–î":
                photo_url = "https://raw.githubusercontent.com/EV4557/electrodvor-bot/main/logo.PNG"
            elif name == "AYAWASKA PARTY":
                photo_url = "https://raw.githubusercontent.com/EV4557/electrodvor-bot/main/ayawaska_party.png"
            else:
                photo_url = None

            if photo_url:
                await update.message.reply_photo(photo=photo_url, caption=caption, parse_mode="Markdown", reply_markup=main_menu)
            else:
                await update.message.reply_text(caption, parse_mode="Markdown", reply_markup=main_menu)

        return CHOOSE_ACTION

    elif text == "–ù–µ–º–Ω–æ–≥–æ –æ –Ω–∞—Å":
        photo_url = "https://raw.githubusercontent.com/EV4557/electrodvor-bot/main/logo.PNG"
        short_caption = "–ü—Ä–æ–µ–∫—Ç ELECTRODVOR üëá"

        description = (
            "ELECTRODVOR ‚Äî –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–∞–º–æ–µ —Å–≤–µ–∂–µ–µ –≤–µ—è–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –≥–æ—Ä–æ–¥–∞. "
            "–ê–±—Å–æ–ª—é—Ç–Ω–æ –Ω–æ–≤—ã–π –∞—Ä—Ç-–ø—Ä–æ–µ–∫—Ç, —Å–æ–∑–¥–∞—é—â–∏–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–≤–µ–Ω—Ç—ã –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ.\n\n"
            "–ö–æ–º–∞–Ω–¥–∞, –∑–∞–ø—É—Å—Ç–∏–≤—à–∞—è ELECTRODVOR, –∏–º–µ–µ—Ç –æ–ø—ã—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –±–æ–ª–µ–µ 400+ –∏–≤–µ–Ω—Ç–æ–≤, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è—é—Ç—Å—è "
            "—Å–∞–º—ã–º–∏ –∫—Ä—É–ø–Ω—ã–º–∏ –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –≤ –≥–æ—Ä–æ–¥–µ.\n\n"
            "–û–±—â–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –ø–µ—Ä–µ–≤–∞–ª–∏–ª–∞ –∑–∞ 15 000.\n\n"
            "–ü—Ä–æ–µ–∫—Ç —É–ø—Ä–∞–≤–ª—è–ª —Ç–∞–∫–∏–º–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏, –∫–∞–∫ –±–∞—Å—Ç–∏–æ–Ω –ê—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π ‚Äî 2 –≥–æ–¥–∞, –ø—Ä–æ–≤—ë–ª —Ç–∞–º 13 –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω—ã—Ö "
            "–æ–ø–µ–Ω-—ç–π—Ä–æ–≤ –∏ –ø–æ–¥ —Å–æ—Ç–Ω—é –¥—Ä—É–≥–∏—Ö –∏–≤–µ–Ω—Ç–æ–≤.\n\n"
            "–¢–∞–∫–∏–µ —Å–æ–±—ã—Ç–∏—è, –∫–∞–∫ –•–µ–ª–ª–æ—É–∏–Ω, –î–µ–Ω—å –≥–æ—Ä–æ–¥–∞, –ù–µ–±–æ—Å–≤–æ–¥, –ê—Å—Ç–µ—Ä–æ–∏–¥, FULL MOON PARTY, –ó–ê–ë–†–û–®–ö–ê, –ù–ò–ö–û–¢–ò–ù, LAGUNA BEACH ‚Äî "
            "–æ–¥–Ω–∏ –∏–∑ —Å–∞–º—ã—Ö –∫—Ä—É–ø–Ω—ã—Ö –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤ —Å—Ç—Ä–∞–Ω–µ.\n\n"
            "ELECTRODVOR ‚Äî —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è, –¥–≤–∏–∂—É—â–∞—è —Å–∏–ª–∞ –≥–æ—Ä–æ–¥–∞, —á—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è —Å–∞–º–æ–π –≤—ã—Å–æ–∫–æ–π –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å—é –≤ –æ–±–ª–∞—Å—Ç–∏.\n\n"
            "–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∏ –ø—Ä–æ–¥—é—Å–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ ‚Äî –ï–≤–≥–µ–Ω–∏–π –ó—è–∑–µ–≤, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º—ã ‚Äî –•—Ä–æ–º –ë–æ–º, –î–∂–æ–Ω–Ω–∏ –õ–µ–≥–µ–Ω–¥–∞, –∏–º–µ–µ—Ç –¥–µ—Å—è—Ç–∫–∏ –∫–µ–π—Å–æ–≤ "
            "–ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∏ —É—Å–ø–µ—à–Ω–æ–º—É –∑–∞–ø—É—Å–∫—É –∫–æ–Ω—Ü–µ—Ä—Ç–Ω—ã—Ö –ø–ª–æ—â–∞–¥–æ–∫ –∏ –±–∞—Ä–æ–≤. –§–∏—Ä–º–µ–Ω–Ω—ã–π –ø–æ—á–µ—Ä–∫ –≤ –±—Ä–µ–Ω–¥–∏–Ω–≥–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π "
            "–ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞. –ë–∞–≥–∞–∂ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∏ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.\n\n"
            "–°–µ–π—á–∞—Å –ø—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—à—ë–ª –≤ —Ñ–æ—Ä–º–∞—Ç —Ä–∞–∑–≤–∏—Ç–∏—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π —Å—Ü–µ–Ω—ã –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–∞. "
            "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç –±–æ–ª–µ–µ 50 —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –ö–æ–º–∞–Ω–¥–∞ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –ø–æ–ª–Ω—ã–º —Ü–∏–∫–ª–æ–º —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: "
            "–æ—Ç –±–∞—Ä–Ω–æ–≥–æ/—Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –¥–æ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–∫—à–Ω–∞, SMM, –ø—Ä–æ–º–æ, —Å—ä—ë–º–∫–∏, —É–ø–∞–∫–æ–≤–∫–∏ –ø–æ–¥ –∫–ª—é—á –ª—é–±–æ–π –∑–∞–¥–∞—á–∏.\n\n"
            "–° –ª—é–±–æ–≤—å—é,\nELECTRODVOR"
        )

        await update.message.reply_photo(photo=photo_url, caption=short_caption, reply_markup=main_menu)
        await update.message.reply_text(description, reply_markup=main_menu)
        return CHOOSE_ACTION

    elif text == "–î—Ä–µ—Å—Å-–∫–æ–¥ –∏ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è":
        rules = (
            "üéüÔ∏è *–î—Ä–µ—Å—Å-–∫–æ–¥ –∏ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è:*\n\n"
            "1Ô∏è‚É£ –í—Ö–æ–¥ —Å—Ç—Ä–æ–≥–æ –ø–æ –±–∏–ª–µ—Ç–∞–º.\n"
            "2Ô∏è‚É£ –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ –æ–±—è–∑–∞–Ω—ã –∏–º–µ—Ç—å –ø—Ä–∏ —Å–µ–±–µ –¥–æ–∫—É–º–µ–Ω—Ç, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–π –ª–∏—á–Ω–æ—Å—Ç—å.\n"
            "3Ô∏è‚É£ –ú—ã –æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ –æ—Ç–∫–∞–∑–∞—Ç—å –≤ –ø–æ—Å–µ—â–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω –∏ –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –±–∏–ª–µ—Ç–∞.\n"
            "4Ô∏è‚É£ –ù–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è –ª–∏—Ü–∞ –≤ –≥—Ä—è–∑–Ω–æ–π, –Ω–µ–æ–ø—Ä—è—Ç–Ω–æ–π, —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∏–ª–∏ –Ω–µ–ø–æ–¥–æ–±–∞—é—â–µ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ –æ–¥–µ–∂–¥–µ.\n"
            "5Ô∏è‚É£ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã –Ω–µ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Ç–µ—Ä—é –ª–∏—á–Ω—ã—Ö –≤–µ—â–µ–π.\n"
            "6Ô∏è‚É£ –ó–∞–ø—Ä–µ—â–µ–Ω—ã: –∞–≥—Ä–µ—Å—Å–∏—è, –Ω–∞—Ä–∫–æ—Ç–∏–∫–∏, –æ—Ä—É–∂–∏–µ.\n"
            "7Ô∏è‚É£ –ù–∞—Ä—É—à–∏—Ç–µ–ª–∏ –ø–æ—Ä—è–¥–∫–∞ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã —Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –±–µ–∑ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏.\n\n"
            "üôè –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!"
        )
        await update.message.reply_text(rules, parse_mode="Markdown", reply_markup=main_menu)
        return CHOOSE_ACTION

    elif text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        keyboard = [
            ["–¶–µ–Ω–∞", "–í—Ä–µ–º—è", "–ú–µ—Å—Ç–æ", "–û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –±–∏–ª–µ—Ç–∞"],
            ["‚¨Ö –ù–∞–∑–∞–¥"]
        ]
        await update.message.reply_text(
            "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n"
            "‚Ä¢ –¶–µ–Ω–∞ ‚Äî —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∏–ª–µ—Ç–æ–≤\n"
            "‚Ä¢ –í—Ä–µ–º—è ‚Äî –∫–æ–≥–¥–∞ –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü\n"
            "‚Ä¢ –ú–µ—Å—Ç–æ ‚Äî –≥–¥–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ\n"
            "‚Ä¢ –û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –±–∏–ª–µ—Ç–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        return ASK_QUESTION

    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é.",
            reply_markup=main_menu
        )
        return CHOOSE_ACTION

    question = text.lower()
    PRICE_KEYWORDS = ["—Ü–µ–Ω–∞", "—Ü–µ–Ω", "—Å—Ç–æ–∏–º–æ—Å—Ç—å", "—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç"]
    TIME_KEYWORDS = ["–≤—Ä–µ–º—è", "–≤—Ä–µ–º–µ–Ω", "–∫–æ–≥–¥–∞", "–≤–æ —Å–∫–æ–ª—å–∫–æ"]
    PLACE_KEYWORDS = ["–º–µ—Å—Ç–æ", "–º–µ—Å—Ç", "–≥–¥–µ"]

    if any(word in question for word in PRICE_KEYWORDS):
        context.user_data["question_type"] = "—Ü–µ–Ω–∞"
    elif any(word in question for word in TIME_KEYWORDS):
        context.user_data["question_type"] = "–≤—Ä–µ–º—è"
    elif any(word in question for word in PLACE_KEYWORDS):
        context.user_data["question_type"] = "–º–µ—Å—Ç–æ"
    else:
        context.user_data["fail_count"] = context.user_data.get("fail_count", 0) + 1
        if context.user_data["fail_count"] >= 2:
            await update.message.reply_text(
                f"–ü–æ—Ö–æ–∂–µ, —è –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å üòî\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º: {organizer_contact}",
                reply_markup=main_menu
            )
            return CHOOSE_ACTION
        else:
            await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–æ–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å.")
            return ASK_QUESTION

    keyboard = [[name] for name in event_details]
    keyboard.append(["‚¨Ö –ù–∞–∑–∞–¥"])
    await update.message.reply_text(
        "–û –∫–∞–∫–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –∏–¥—ë—Ç —Ä–µ—á—å?",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    return DETAIL_QUESTION

# –£—Ç–æ—á–Ω–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
async def handle_detail_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "‚¨Ö –ù–∞–∑–∞–¥":
        return await handle_question(update, context)

    question_type = context.user_data.get("question_type")

    if text not in event_details or question_type not in event_details[text]:
        await update.message.reply_text("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=main_menu)
        return CHOOSE_ACTION

    answer = event_details[text][question_type]
    await update.message.reply_text(answer, reply_markup=main_menu)
    return CHOOSE_ACTION

# –û—Ç–º–µ–Ω–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)
    return CHOOSE_ACTION

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
def main():
    import os
    app = ApplicationBuilder().token(os.getenv("TELEGRAM_TOKEN")).build()

    conv = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            CHOOSE_ACTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_action)],
            CHOOSE_EVENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_event_choice)],
            ASK_QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_question)],
            DETAIL_QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_detail_question)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv)
    app.run_polling()

if __name__ == "__main__":
    main()